{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React Init (arrow function component without name)": {
		"prefix": "rinit",
		"body": [
			"import React from 'react';",
			"",
			"export default function $TM_FILENAME_BASE() {",
			"  return <h1>$TM_FILENAME_BASE</h1>;",
			"}"
		]
	},
	"Next.js App": {
		"prefix": "napp",
		"body": [
			"import { AppProps } from 'next/app'",
			"",
			"function MyApp({ Component, pageProps }: AppProps) {",
			"  return <Component {...pageProps} />",
  			"}",
 	 		"",
  			"// Only uncomment this method if you have blocking data requirements for",
  			"// every single page in your application. This disables the ability to",
  			"// perform automatic static optimization, causing every page in your app to",
  			"// be server-side rendered.",
  			"//",
  			"// MyApp.getInitialProps = async (appContext) => {",
  			"//   // calls page's `getInitialProps` and fills `appProps.pageProps`",
  			"//   const appProps = await App.getInitialProps(appContext);",
  			"//",
  			"//   return { ...appProps }",
  			"// }",
  			"",
  			"export default MyApp"
		]
	}
}